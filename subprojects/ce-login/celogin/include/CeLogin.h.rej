diff a/subprojects/ce-login/celogin/include/CeLogin.h b/subprojects/ce-login/celogin/include/CeLogin.h	(rejected hunks)
@@ -227,18 +231,16 @@ struct AcfUserFields
     const uint64_t serialNumberLengthParm, ServiceAuthority& authorityParm,
     uint64_t& expirationTimeParm);
 
-/** @brief Validate an ACF file and parse out the relevant fields
+/** @brief Validate an ACF file at upload time
  *
- *  This function decodes and verifies several aspects of the provided ACF file.
+ *  This function decodes and verifies several aspects of the provided ACF.
  *  This includes verifying the signature over the ACF, ensuring the ACF is not expired,
- *  checking the serial number fields, verifying the correct password was entered (for
- *  a service ACF) and validating the replay ID, if it exists. Upon successful validation,
- *  a AcfUserFields object is returned with the fields relevant to the BMC.
+ *  checking the serial number fields, and validating the replay ID, if it exists.
+ *  Upon successful validation, the output fields are udpated with the values obtained
+ *  from the ACF. THE CALLER MUST PERSIST THE REPLAY ID PROVIDED ON SUCCESS.
  *
- *  @param accessControlFileParm a pointer to the ASN1 encoded binary ACF 
+ *  @param accessControlFileParm a pointer to the ASN1 encoded binary ACF
  *  @param accessControlFileLengthParm the length of the provided ACF
- *  @param passwordParm a pointer to the provided password
- *  @param passwordLengthParm the length of the provided password
  *  @param timeSinceUnixEpochInSecondsParm the current system time encoded as a unix timestamp
  *  @param publicKeyParm a pointer to the public key used to vaidate the signature over the ACF
  *  @param publicKeyLengthParm the length of the provided public key
